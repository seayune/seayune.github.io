---
// Assets
import Logo from "@/components/global/Logo.astro";
// Fundations
import Text from "@/components/fundations/elements/Text.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
// Podcasts
const allPodcasts = await getCollection("podcast");
allPodcasts.sort((a, b) => {
  const dateA = new Date(a.data.pubDate).getTime(); // Convert to timestamp
  const dateB = new Date(b.data.pubDate).getTime(); // Convert to timestamp
  return dateB - dateA; // Compare timestamps
});
// Blog
import EntriesNavigaton from "@/components/blog/EntriesNavigation.astro";
import BlogEntriesOne from "@/components/blog/BlogEntriesOne.astro";
// Get all posts
import { getCollection } from "astro:content";
const allPosts = await getCollection("posts");
allPosts.sort((a, b) => {
  const dateA = new Date(a.data.pubDate).getTime(); // Convert to timestamp
  const dateB = new Date(b.data.pubDate).getTime(); // Convert to timestamp
  return dateB - dateA; // Compare timestamps
});
// Pocasts links
const podcastPlatforms = [
  { name: "Spotify", link: "#_" },
  { name: "Apple Podcasts", link: "#_" },
  { name: "YouTube", link: "#_" },
  { name: "Overcast", link: "#_" },
  { name: "Pocket Casts", link: "#_" },
  { name: "Castbox", link: "#_" },
  { name: "Stitcher", link: "#_" },
  { name: "iHeartRadio", link: "#_" },
  { name: "Google Podcasts", link: "#_" },
  { name: "Amazon Music", link: "#_" },
];
---

<section id="navigation" class="z-10 bg-white">
  <Wrapper variant="standard" class="pt-2 wrapper-class">
    <div class="grid grid-cols-3 gap-2 items-start w-full pb-4">
      <!-- Header content -->
      <div class="col-span-2 md:col-span-1">
        <a href="/">
          <Text
            tag="p"
            variant="textXS"
            class="text-black font-medium hover:text-base-600 uppercase"
          >
            Innovative Design Conversations â€” <span class="text-base-500"
              >editorial</span
            >
          </Text>
        </a>
      </div>
      <div
        class="flex flex-col uppercase col-start-1 row-start-2 col-span-2 md:col-span-1 md:col-start-auto md:row-start-auto md:mx-auto md:text-center"
      >
        <Text tag="p" variant="textXS" class="text-black font-medium">
          Interviews with design engineers
        </Text>
      </div>
      <div class="ml-auto gap-4 flex items-center col-start-3">
        <Text
          tag="a"
          variant="textXS"
          href="/system/overview"
          class="uppercase text-black hover:text-base-500 font-medium"
        >
          overview
        </Text>
        <button
          id="menubutton"
          type="button"
          class="uppercase text-black w-12 text-right hover:text-base-500 font-medium text-xs"
          aria-controls="menu"
          aria-label="Toggle menu"
        >
          menu
        </button>
      </div>
    </div>
    <!-- Drawer -->
    <nav
      id="menu"
      role="navigation"
      aria-labelledby="menubutton"
      class="relative overflow-hidden border-y bg-white "
    >
      <div class="grid grid-cols-1 md:grid-cols-4 gap-2 pb-12 pt-6 mb-4">
        <a href="/">
          <Logo class="h-8" />
        </a>
        <div class="flex flex-col gap-2 lg:gap-8">
          <div>
            <Text
              tag="a"
              href="/interviews/home"
              variant="displayLG"
              class="font-serif font-light"
            >
              Interviews
            </Text>
            <div class="md:flex flex-col hidden mt-1">
              {allPodcasts.map((post) => <EntriesNavigaton post={post} />)}
            </div>
          </div>
          <div>
            <Text
              tag="p"
              href="/blog/home"
              variant="displayLG"
              class="font-serif font-light"
            >
              Listen on
            </Text>
            <nav class="flex flex-col gap-1 mt-1">
              {
                podcastPlatforms.map((platform) => (
                  <Text
                    tag="a"
                    variant="textXS"
                    class="text-base-500 font-serif hover:underline font-medium"
                    href={platform.link}
                  >
                    {platform.name}
                  </Text>
                ))
              }
            </nav>
          </div>
        </div>
        <div class="lg:col-span-2">
          <Text
            tag="a"
            href="/blog/home"
            variant="displayLG"
            class="font-serif font-light"
          >
            Blog
          </Text>
          <div class="md:grid grid-cols-1  gap-2 lg:grid-cols-2  mt-1 hidden">
            {allPosts.slice(0, 2).map((post) => <BlogEntriesOne post={post} />)}
          </div>
        </div>
      </div>
    </nav>
  </Wrapper>
</section>
<style>
  #menu {
    max-height: 0;
    opacity: 0;
    overflow: hidden;
    transition:
      max-height 0.5s ease-out,
      opacity 0.5s ease-out;
  }
  #menu.expanded {
    max-height: 100vh;
    opacity: 1;
  }
</style>
<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const menuButton = document.getElementById("menubutton");
    const menu = document.getElementById("menu");
    let expanded = false;

    // Toggle menu
    menuButton.addEventListener("click", () => {
      expanded = !expanded;
      menuButton.setAttribute("aria-expanded", expanded);
      menu.classList.toggle("expanded");

      // Change the text of the menu button
      if (expanded) {
        menuButton.textContent = "Close";
      } else {
        menuButton.textContent = "Menu";
      }
    });
  });
</script>
